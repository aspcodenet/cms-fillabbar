elsökning i kod med hjälp av gummianka (en: Rubber duck debugging) är en metod för att felsöka kod. 
Namnet är en referens till boken The Pragmatic Programmer, där en programmerare ofta bär runt på en 
gummianka och felsöker sin kod genom att tvinga sig själv att förklara den, rad för rad, 
för ankan.[1] Denna teknik har många andra namn som inbegriper olika livlösa objekt.
Många programmerare har upplevt att när de förklarat sin kod för någon annan, till och med någon 
som inte kan något om programmering, har de själva upptäckt problem i koden. När de beskrivit 
vad koden ska göra, och observerat vad den egentligen gör, uppenbarar sig problemen.[2]
I allmänhet kan det också fungera bra att beskriva ett ämne man själv är välbekant med för någon 
annan för att se på ämnet ur ett annat perspektiv, vilket i sin tur kan skapa en djupare 
förståelse.[3] Genom att använda ett livlöst objekt kan programmeraren uppnå en djupare 
förståelse för eventuella problem i koden utan att behöva störa någon annan.
In this chapter we will take a look at the basic programming terminology and we will write our first 
C# program. We will familiarize ourselves with programming – what it means and its connection to 
computers and programming languages.

Briefly, we will review the different stages of software development.

We will introduce the C# language, the .NET platform and the different Microsoft technologies used in 
software development. We will examine what tools we need to program in C#. We will use the 
C# language to write our first computer program, compile and run it from the command line as well as 
from Microsoft Visual Studio integrated development environment. We will review the MSDN 
Library – the documentation of the .NET Framework. It will help us with our exploration of 
the features of the platform and the language.
